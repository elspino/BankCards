openapi: 3.1.0
info:
  title: BankCards API
  description: Документация API для проекта BankCards
  version: v1
servers:
  - url: http://localhost:8080
    description: Generated server url
security:
  - bearerAuth: []
paths:
  /api/v1/cards:
    put:
      tags:
        - card-controller
      summary: Обновить карту
      operationId: updateCard
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CardDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/CardDto"
    post:
      tags:
        - card-controller
      summary: Создать новую карту
      operationId: createCard
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CardDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/CardDto"
  /api/v1/cards/{id}/block:
    post:
      tags:
        - card-controller
      summary: Заблокировать карту
      operationId: blockCard
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: OK
  /api/v1/cards/{id}/activate:
    post:
      tags:
        - card-controller
      summary: Активировать карту
      operationId: activateCard
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: OK
  /api/v1/cards/transfer:
    post:
      tags:
        - card-controller
      summary: Перевод между картами
      operationId: transfer
      parameters:
        - name: fromCardId
          in: query
          required: true
          schema:
            type: string
            format: uuid
        - name: toCardId
          in: query
          required: true
          schema:
            type: string
            format: uuid
        - name: amount
          in: query
          required: true
          schema:
            type: number
      responses:
        "200":
          description: OK
  /api/v1/auth/register:
    post:
      tags:
        - auth-controller
      summary: Регистрация пользователя
      operationId: register
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AuthRequestDTO"
        required: true
      responses:
        "200":
          description: OK
  /api/v1/auth/login:
    post:
      tags:
        - auth-controller
      summary: Авторизация пользователя
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AuthRequestDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/TokenDTO"
  /api/v1/cards/{id}:
    get:
      tags:
        - card-controller
      summary: Получить карту по id
      operationId: getCardById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/CardDto"
    delete:
      tags:
        - card-controller
      summary: Удалить карту по id
      operationId: deleteCard
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: No Content
  /api/v1/cards/{id}/balance:
    get:
      tags:
        - card-controller
      summary: Просмотр баланса карты
      operationId: getBalance
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/CardBalance"
  /api/v1/cards/filter:
    get:
      tags:
        - card-controller
      summary: Поиск по картам (по номеру, статусу)
      operationId: search
      parameters:
        - name: number
          in: query
          required: false
          schema:
            type: string
        - name: status
          in: query
          required: false
          schema:
            type: string
            enum:
              - ACTIVE
              - EXPIRED
              - BLOCKED
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 10
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/PageCardDto"
components:
  schemas:
    CardDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
        number:
          type: string
        expirationDate:
          type: string
        status:
          type: string
          enum:
            - ACTIVE
            - EXPIRED
            - BLOCKED
        balance:
          type: number
        userId:
          type: string
          format: uuid
      required:
        - expirationDate
        - number
    AuthRequestDTO:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required:
        - password
        - username
    TokenDTO:
      type: object
      properties:
        accessToken:
          type: string
        refreshToken:
          type: string
    CardBalance:
      type: object
      properties:
        balance:
          type: number
    PageCardDto:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: "#/components/schemas/CardDto"
        number:
          type: integer
          format: int32
        sort:
          $ref: "#/components/schemas/SortObject"
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: "#/components/schemas/PageableObject"
        empty:
          type: boolean
    PageableObject:
      type: object
      properties:
        offset:
          type: integer
          format: int64
        sort:
          $ref: "#/components/schemas/SortObject"
        pageNumber:
          type: integer
          format: int32
        paged:
          type: boolean
        pageSize:
          type: integer
          format: int32
        unpaged:
          type: boolean
    SortObject:
      type: object
      properties:
        empty:
          type: boolean
        sorted:
          type: boolean
        unsorted:
          type: boolean
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
